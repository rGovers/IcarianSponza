#version 450

layout(location = 0) in vec4 position;
layout(location = 1) in vec3 normal;
layout(location = 2) in vec4 color;
layout(location = 3) in vec2 texCoord;

layout(location = 0) out vec4 fragColor;
layout(location = 1) out vec3 fragNormal;
layout(location = 2) out vec2 fragTexCoord;

#!structure(CameraBuffer, 10, 1, camBuffer)
#!pushbuffer(ModelBuffer, modelBuffer)

void main()
{
    // Flipped when exported from Blender for some reason
    vec4 pos = vec4(-position.x, position.y, position.z, 1.0f);
    gl_Position = camBuffer.ViewProj * modelBuffer.Model * pos;

    fragColor = color;
    fragNormal = normal;
    // Models expect flipped texture coordinates
    fragTexCoord = vec2(texCoord.x, 1.0f - texCoord.y);
}